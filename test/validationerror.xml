<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4ea5efc0-5c05-4511-b5e7-1d6198e37cdb" created="3.5.1" activeEnvironment="Default environment" name="ValidationError" resourceRoot="" updated="3.5.1 2020-12-09T14:26:21Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testSuite id="035618c9-d8a4-47ea-9b19-b12fb205a392" name="TestSuite 1">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="64711d1d-7353-4932-9d8a-f251dd076061" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="fileWaitTestStep" name="File Wait" id="c77d1dd2-5031-4d36-bad3-1e0e3ec464ac">
        <con:settings/>
        <con:config>
          <FileName>/home/jonathan/thefile.txt</FileName>
          <Timeout>0</Timeout>
          <timeout_measure>0</timeout_measure>
          <DeleteFile>false</DeleteFile>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
